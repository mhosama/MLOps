trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: mlops-aml-vg-Mauritz

stages:

  - stage: Training
    jobs:
      - job: TrainJob
        displayName: Training in Azure ML Compute
        steps:
          - task: AzureCLI@1
            displayName: 'Install the CLI'
            inputs:
              azureSubscription: 'AzureResourceManagerConnection'
              scriptLocation: inlineScript
              inlineScript: 'az extension add -n azure-cli-ml'

          - task: AzureCLI@1
            displayName: 'Run training'
            inputs:
              azureSubscription: 'AzureResourceManagerConnection'
              scriptLocation: inlineScript
              inlineScript: 'az ml run submit-script --workspace-name $(BASE_NAME)-aml-ws --resource-group $(BASE_NAME)-aml-rg -e $(MODEL_NAME)-experiment -d code/train/train_conda_env.yml --ct $(COMPUTE_CLUSTER_NAME) --source-directory code/train -t run.json train_model.py --MODEL_NAME $(MODEL_NAME) --DATASET_NAME $(DATASET_NAME)'

          - publish: $(System.DefaultWorkingDirectory)/run.json
            displayName: Publish run metadata artifact
            artifact: run-metadata

  - stage: RegisterModel
    displayName: Register the model
    jobs:

      # Perform an empty deploy job for approval (This is the way in Azure Devops)
      - deployment: Approval
        displayName: Approval for model registration
        environment: 'Dev'

      - job: RegisterJob
        displayName: Register the model
        steps:
          - task: AzureCLI@1
            displayName: 'Install the CLI'
            inputs:
              azureSubscription: 'AzureResourceManagerConnection'
              scriptLocation: inlineScript
              inlineScript: 'az extension add -n azure-cli-ml'

          - download: current
            displayName: Download the run details
            artifact: run-metadata

          - task: AzureCLI@1
            displayName: 'Register the model'
            inputs:
              azureSubscription: 'AzureResourceManagerConnection'
              scriptLocation: inlineScript
              inlineScript: 'az ml model register --workspace-name $(BASE_NAME)-aml-ws --resource-group $(BASE_NAME)-aml-rg -f $(Pipeline.Workspace)/run-metadata/run.json --asset-path outputs/$(MODEL_NAME) --experiment-name $(MODEL_NAME)-experiment -n $(MODEL_NAME) -t model.json'

          - publish: $(System.DefaultWorkingDirectory)/model.json
            displayName: Publish model metadata artifact
            artifact: model-metadata

  - stage: DeployToDev
    displayName: Deploy model to Dev (Azure Container Instance)
    jobs:
      - job: DeployDevJob
        steps:
          - task: AzureCLI@1
            displayName: 'Install the CLI'
            inputs:
              azureSubscription: 'AzureResourceManagerConnection'
              scriptLocation: inlineScript
              inlineScript: 'az extension add -n azure-cli-ml'

          - download: current
            displayName: Download artifact model metadata
            artifact: model-metadata

          - task: AzureCLI@1
            displayName: 'Deploy the model to ACI'
            inputs:
              azureSubscription: 'AzureResourceManagerConnection'
              scriptLocation: inlineScript
              inlineScript: 'az ml model deploy -n $(BASE_NAME)-aml-aci -f $(Pipeline.Workspace)/model-metadata/model.json --ic  $(Build.SourcesDirectory)/code/score/inferenceConfig.yml --dc  $(Build.SourcesDirectory)/code/score/deploymentConfig.yml --overwrite --workspace-name $(BASE_NAME)-aml-ws --resource-group $(BASE_NAME)-aml-rg'